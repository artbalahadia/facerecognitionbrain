{"ast":null,"code":"var _jsxFileName = \"/Users/artd/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/logo/Logo';\nimport ImageLinkForm from './components/imagelinkform/ImageLinkForm';\nimport Rank from './components/rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport SignIn from './components/signin/SignIn';\nimport FaceRecognition from './components/facerecognition/FaceRecognition';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: 'c06ec5915e9040cb9dc0daef6d5e4db1'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 600\n      }\n    }\n  },\n  interactivity: {\n    events: {\n      onhover: {\n        enable: true,\n        mode: \"repulse\"\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = () => {\n      this.setState({\n        route: 'home'\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin'\n    };\n  } //To show face box \n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), this.state.route === 'signin' ? /*#__PURE__*/React.createElement(SignIn, {\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageUrl: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default App; // \"https://samples.clarifai.com/metro-north.jpg\" API","map":{"version":3,"sources":["/Users/artd/facerecognitionbrain/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","Particles","Clarifai","SignIn","FaceRecognition","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","interactivity","events","onhover","mode","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","onSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","onRouteChange","route","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/logo/Logo';\nimport ImageLinkForm from './components/imagelinkform/ImageLinkForm';\nimport Rank from './components/rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport SignIn from './components/signin/SignIn';\nimport FaceRecognition from './components/facerecognition/FaceRecognition';\nimport './App.css';\n\nconst app = new Clarifai.App({apiKey: 'c06ec5915e9040cb9dc0daef6d5e4db1'});\n\nconst particlesOptions = {\n    particles: {\n      number: {\n        value: 80,\n        density: {\n          enable: true,\n          value_area: 600\n        }\n      }\n    },\n    interactivity: {\n      events: {\n          onhover: {\n              enable: true,\n              mode: \"repulse\"\n          }\n      }\n  }\n  }\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n    }\n  }\n\n//To show face box \ncalculateFaceLocation = (data) => {\n  const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n  const image = document.getElementById('inputimage');\n  const width = Number(image.width);\n  const height = Number(image.height);\n  return {\n    leftCol: clarifaiFace.left_col * width,\n    topRow: clarifaiFace.top_row * height,\n    rightCol: width - (clarifaiFace.right_col * width),\n    bottomRow: height - (clarifaiFace.bottom_row * height)\n  }\n}\n\n\ndisplayFaceBox = (box) => {\n  this.setState({box: box});\n}\n\n// To get input value\nonInputChange = (event) => {\n  this.setState({input: event.target.value});\n}\n\n// To submit & face detector (TryMe)\nonSubmit = () => {\n  this.setState({imageUrl: this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch(err => console.log(err));\n}\n\n// To go to homepage after signin\nonRouteChange = () => {\n  this.setState({route: 'home'});\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n            <Particles className='particles'\n                params={particlesOptions}\n            />\n        <Navigation />\n        { this.state.route === 'signin' \n          ? <SignIn onRouteChange={ this.onRouteChange }/>\n          : <div>\n            <Logo />\n            <Rank />\n            <ImageLinkForm onInputChange = {this.onInputChange} onSubmit = {this.onSubmit}/>\n            <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n          </div>\n        }\n        </div>\n    );\n  }\n}\n\nexport default App;\n\n\n// \"https://samples.clarifai.com/metro-north.jpg\" API"]},"metadata":{},"sourceType":"module"}